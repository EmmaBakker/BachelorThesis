library(readr)
library(dplyr)
library(lmerTest)
library(jtools)
library(tidyr)
library(ggplot2)
library(interactions)
library(gridExtra)
library(car)
library(mgcv)
library(nlme)
# ----------------- DATASETS ----------------- #
# LSTM results for English and Hindi
df_lstm <- read_csv("lstm_hi_en.csv")
# Transformer results for English and Hindi
df_transformer <- read_csv("transformer_hi_en.csv")
# ----------------- SPLIT DATA ----------------- #
# Split data into English and Hindi subsets for both the LSTM and the Transformer datasets
df_lstm_en <- df_lstm %>% filter(lang_y == "EN")
df_lstm_hi <- df_lstm %>% filter(lang_y == "HI")
df_transformer_en <- df_transformer %>% filter(lang_y == "EN")
df_transformer_hi <- df_transformer %>% filter(lang_y == "HI")
# ----------------- KEEP NEEDED COLUMNS ----------------- #
# Function to subset dataframe columns
subset_columns <- function(df, cols) {
df %>%
select(all_of(cols))
}
# Column mappings for different data types
col_map <- list(
english_lstm = c("lang_y", "participant", "sent_id_and_idx", "word_idx", "word",
"actual_word", "word_len", "firstfix.dur", "dur", "firstrun.dur", "lstm_entropy",
"lstm_surprisal", "lstm_perplexity"),
hindi_lstm = c("lang_y", "participant", "sent_id_and_idx", "word_idx", "word",
"actual_word", "word_len", "FFD", "TFT", "FPRT", "lstm_entropy",
"lstm_surprisal","lstm_perplexity"),
english_transformer = c("lang_y", "participant", "sent_id_and_idx", "word_idx", "word",
"actual_word", "word_len", "firstfix.dur", "dur", "firstrun.dur", "tf_entropy",
"tf_surprisal", "tf_perplexity"),
hindi_transformer = c("lang_y", "participant", "sent_id_and_idx", "word_idx", "word",
"actual_word", "word_len", "FFD", "TFT", "FPRT", "tf_entropy",
"tf_surprisal", "tf_perplexity")
)
df_lstm_en <- subset_columns(df_lstm_en, col_map$english_lstm)
df_lstm_hi <- subset_columns(df_lstm_hi, col_map$hindi_lstm)
df_transformer_en <- subset_columns(df_transformer_en, col_map$english_transformer)
df_transformer_hi <- subset_columns(df_transformer_hi, col_map$hindi_transformer)
Renaming columns for consistency in both datasets
Renaming columns for consistency in both datasets
# Renaming columns for consistency in both datasets
rename_vars <- function(df) {
df %>%
rename(FFD = firstfix.dur, TFT = dur, FPRT = firstrun.dur) %>%
mutate(lang_y = as.factor(lang_y))
}
df_lstm_en <- rename_vars(df_lstm_en)
df_transformer_en <- rename_vars(df_transformer_en)
# ----------------- CONVERT FACTOR DATA TYPES ----------------- #
convert_factors <- function(df) {
df %>%
mutate(participant = as.factor(participant),
word = as.factor(word))
}
df_lstm_en <- convert_factors(df_lstm_en)
df_lstm_hi <- convert_factors(df_lstm_hi)
df_transformer_en <- convert_factors(df_transformer_en)
df_transformer_hi <- convert_factors(df_transformer_hi)
# ----------------- REMOVE SKIPPED WORDS ----------------- #
dependent_vars <- c("FFD", "TFT", "FPRT")
replace_zeros <- function(df) {
df[dependent_vars] <- lapply(df[dependent_vars], function(x) na_if(x, 0))
df
}
df_lstm_en <- replace_zeros(df_lstm_en)
df_lstm_hi <- replace_zeros(df_lstm_hi)
df_transformer_en <- replace_zeros(df_transformer_en)
df_transformer_hi <- replace_zeros(df_transformer_hi)
# ----------------- LOG TRANSFORMER DEPENDET VARIABLES ----------------- #
log_transform <- function(df) {
df[dependent_vars] <- lapply(df[dependent_vars], function(x) log(x))
df
}
df_lstm_en <- log_transform(df_lstm_en)
df_lstm_hi <- log_transform(df_lstm_hi)
df_transformer_en <- log_transform(df_transformer_en)
df_transformer_hi <- log_transform(df_transformer_hi)
# ----------------- CORRELATIONS ----------------- #
correlation_lstm_en <- cor(df_lstm_en$lstm_entropy, df_lstm_en$lstm_surprisal, use = "complete.obs")
correlation_lstm_hi <- cor(df_lstm_hi$lstm_entropy, df_lstm_hi$lstm_surprisal, use = "complete.obs")
correlation_tf_en <- cor(df_transformer_en$tf_entropy, df_transformer_en$tf_surprisal, use = "complete.obs")
correlation_tf_hi <- cor(df_transformer_hi$tf_entropy, df_transformer_hi$tf_surprisal, use = "complete.obs")
print(c("Correlation LSTM English: ", correlation_lstm_en))
print(c("Correlation LSTM Hindi: ", correlation_lstm_hi))
print(c("Correlation Transformer English: ", correlation_tf_en))
print(c("Correlation Transformer Hindi: ", correlation_tf_hi))
